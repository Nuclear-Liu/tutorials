server:
  port: 7001
  error:
    include-message: always
spring:
  application:
    name: product
  data:
    mongodb:
      host: localhost
      port: 27017
      database: product-db
  cloud:
    function:
      definition: messageProcessor
    stream:
      bindings:
        messageProcessor-in-0:
          destination: products
          content-type: application/json
          group: productsGroup
          consumer:
            max-attempts: 3
            back-off-initial-interval: 500
            back-off-max-interval: 1_000
            back-off-multiplier: 2.0
      default-binder: rabbit
      rabbit:
        bindings:
          messageProcessor-in-0:
            consumer:
              auto-bind-dlq: true
              republish-to-dlq: true
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
app:
  eureka-username: u
  eureka-password: p
  eureka-server: localhost
eureka:
  client:
    service-url:
      defaultZone: http://${app.eureka-username}:${app.eureka-password}@${app.eureka-server}:8761/eureka/
    initial-instance-info-replication-interval-seconds: 5
    registry-fetch-interval-seconds: 5
  instance:
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 5
logging:
  level:
    root: info
    org.hui: debug
    org.springframework.data.mongodb.core.ReactiveMongoTemplate: debug
management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: "*"
---
spring:
  config:
    activate:
      on-profile: docker
  data:
    mongodb:
      host: mongodb
  rabbitmq:
    host: rabbitmq
server:
  port: 8080
app:
  eureka-server: eureka
---
spring:
  config:
    activate:
      on-profile: streaming_partitioned
  cloud:
    stream:
      bindings:
        messageProcessor-in-0:
          consumer:
            partitioned: true
            instance-count: 2
---
spring:
  config:
    activate:
      on-profile: streaming_instance_0
  cloud:
    stream:
      bindings:
        messageProcessor-in-0:
          consumer:
            instance-index: 0
---
spring:
  config:
    activate:
      on-profile: streaming_instance_1
  cloud:
    stream:
      bindings:
        messageProcessor-in-0:
          consumer:
            instance-index: 1
